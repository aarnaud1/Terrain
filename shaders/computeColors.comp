/*
 * Copyright (C) 2024 Adrien ARNAUD
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

#version 450 core
#include "biome.inl"

layout(local_size_x_id = 0) in;

layout(binding = 0) buffer restrict readonly HeightMap { float height[]; };
layout(binding = 1) buffer restrict readonly MoistureMap { float moisture[]; };
layout(binding = 2) buffer restrict writeonly ColorMap { vec4 colors[]; };

layout(push_constant) uniform PushConstants { uint pointCount; };

void main()
{
    for(uint idx = gl_GlobalInvocationID.x; idx < pointCount;
        idx += gl_NumWorkGroups.x * gl_WorkGroupSize.x)
    {
        const float h = height[idx];
        const float m = moisture[idx];
        colors[idx] = vec4((getColor(h, m)) / 255.0f, 1.0f);
    }
}